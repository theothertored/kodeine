{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Kode (Kustom formula)",
	"patterns": [
		{
			"include": "#evaluated-part"
		},
		{
			"include": "#escaped-dollar"
		}
	],
	"repository": {
		"evaluated-part": {
			"name": "meta.evaluated.kode",
			"begin": "\\$(?!\\$)",
			"beginCaptures": {
				"0": {
					"name": "keyword.control.kode"
				}
			},
			"end": "\\$",
			"endCaptures": {
				"0": {
					"name": "keyword.control.kode"
				}
			},
			"patterns": [
				{
					"include": "#expression"
				}
			]
		},
		"quoted-string": {
			"name": "string.quoted.double.kode",
			"begin": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.kode"
				}
			},
			"end": "\"",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.kode"
				}
			}
		},
		"numeric-literal": {
			"name": "constant.numeric.kode",
			"match": "(?<=^|[\\^*/%+\\-=!<>~|&$(),])(?:\\s*)(\\d+\\.?\\d*|\\.\\d+)(?=\\s*[\\^*/%+\\-=!<>~|&$(),\"]|\\s*\\S+\\s*\\(|\\s*$)"
		},
		"problematic-char": {
			"name": "constant.character.kode",
			"match": "[!~](?!=)"
		},
		"unquoted-string": {
			"name": "string.unquoted.kode",
			"begin": "[^\\^*/%+\\-=!<>~|&$(),\"\\s]+(?!\\()",
			"end": "(?=[\\^*/%+\\-=!<>~|&$(),\"])"
		},
		"operator": {
			"name": "keyword.operator.kode",
			"match": "(\\+|\\*|%|-|/|\\^|[!~<>]?=|<|>)"
		},
		"function-call": {
			"name": "meta.function.call.kode",
			"begin": "([a-z]{2})\\s*?(\\()",
			"beginCaptures": {
				"1": {
					"name": "entity.name.function.kode"
				},
				"2": {
					"name": "meta.braces.round.kode"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "meta.braces.round.kode"
				}
			},
			"patterns": [
				{
					"include": "#argument"
				},
				{
					"name": "punctuation.separator.comma.kode",
					"match": ","
				}
			]
		},
		"subexpression": {
			"name": "meta.subexpression.kode",
			"begin": "\\(",
			"end": "\\)",
			"captures": {
				"0": {
					"name": "meta.braces.round.kode"
				}
			},
			"patterns": [
				{
					"include": "#expression"
				}
			]
		},
		"argument": {
			"name": "meta.function.argument",
			"begin": "(?<=\\(\\s*|,\\s*)",
			"end": "(?=,\\s*|\\s*\\))",
			"patterns": [
				{
					"include": "#expression"
				}
			]
		},
		"expression": {
			"name": "meta.expression.kode",
			"patterns": [
				{
					"include": "#quoted-string"
				},
				{
					"include": "#function-call"
				},
				{
					"include": "#subexpresion"
				},
				{
					"include": "#operator"
				},
				{
					"include": "#problematic-char"
				},
				{
					"include": "#numeric-literal"
				},
				{
					"include": "#unquoted-string"
				}
			]
		},
		"escaped-dollar": {
			"name": "constant.character.escape.kode",
			"match": "\\$\\$"
		}
	},
	"scopeName": "source.kode"
}